import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, Dimensions, Alert, Modal, Pressable, TextInput } from 'react-native';
import { router } from 'expo-router';
import { ArrowLeft, CheckCircle, User, Award, Clock, Share2, LogOut, XCircle, Settings, Brain, ChevronRight, CreditCard as Edit3, CircleHelp as HelpCircle } from 'lucide-react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { Button, Card } from '../../components';

const { width } = Dimensions.get('window');

export default function OnboardingStep6() {
  const [userData, setUserData] = useState({
    ageRange: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    ageRangeLabel: '',
    activityLevel: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    activityLevelLabel: '',
    timezone: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    workStartTime: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
    workEndTime: '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
  });

  const fetchUserData = () => {
    if (typeof window !== 'undefined') {
      setUserData({
        ageRange: localStorage.getItem('userAgeRange') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
        ageRangeLabel: localStorage.getItem('userAgeRangeLabel') || '',
        activityLevel: localStorage.getItem('userActivityLevel') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
        activityLevelLabel: localStorage.getItem('userActivityLevelLabel') || '',
        timezone: localStorage.getItem('userTimezone') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
        workStartTime: localStorage.getItem('userWorkStartTime') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
        workEndTime: localStorage.getItem('userWorkEndTime') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
      });
    }
  };

  React.useEffect(() => {
    fetchUserData();
  }, []);

  const [showSkipModal, setShowSkipModal] = useState(false);
  const [showEditProfileModal, setShowEditProfileModal] = useState(false);

  const handleEditProfile = () => {
    setShowEditProfileModal(true);
  };

  const updateUserData = (field: string, value: string, label: string | null) => {
    const newData = { ...userData };
    
    if (field === 'ageRange') {
      newData.ageRange = value;
      newData.ageRangeLabel = label || '';
    } else if (field === 'activityLevel') {
      newData.activityLevel = value;
      newData.activityLevelLabel = label || '';
    } else if (field === 'timezone') {
      newData.timezone = value;
    }
    
    setUserData(newData);
    
    if (typeof window !== 'undefined') {
      if (field === 'ageRange') {
        localStorage.setItem('userAgeRange', value);
        localStorage.setItem('userAgeRangeLabel', label || '');
      } else if (field === 'activityLevel') {
        localStorage.setItem('userActivityLevel', value);
        localStorage.setItem('userActivityLevelLabel', label || '');
      } else if (field === 'timezone') {
        localStorage.setItem('userTimezone', value);
      }
    }
    
    Alert.alert('–£—Å–ø–µ—à–Ω–æ!', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
  };

  const updateWorkHours = (startTime: string, endTime: string) => {
    const newData = { 
      ...userData, 
      workStartTime: startTime, 
      workEndTime: endTime 
    };
    setUserData(newData);
    
    if (typeof window !== 'undefined') {
      localStorage.setItem('userWorkStartTime', startTime);
      localStorage.setItem('userWorkEndTime', endTime);
    }
    
    Alert.alert('–£—Å–ø–µ—à–Ω–æ!', `–†–∞–±–æ—á–∏–µ —á–∞—Å—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞ ${startTime} - ${endTime}`);
  };

  const handleComplete = () => {
    if (typeof window !== 'undefined') {
      localStorage.setItem('onboardingCompleted', 'true');
    }
    
    router.replace('/(tabs)');
  };

  const handleSkip = () => {
    setShowSkipModal(true);
  };

  const confirmSkip = () => {
    setShowSkipModal(false);
    router.replace('/(tabs)'); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
  };

  const cancelSkip = () => {
    setShowSkipModal(false);
  };

  const resetOnboarding = () => {
    Alert.alert(
      '–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ?',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { 
          text: '–°–±—Ä–æ—Å–∏—Ç—å', 
          style: 'destructive',
          onPress: () => {
            if (typeof window !== 'undefined') {
              localStorage.clear();
            }
            router.replace('/onboarding');
          }
        }
      ]
    );
  };

  return (
    <View className="flex-1 bg-[#0A0A0A]">
      <SafeAreaView className="flex-1 px-8 pt-6">
        {/* Header */}
        <View className="w-full flex-row items-center justify-between mb-5">
          <TouchableOpacity 
            className="p-2 rounded-full"
            onPress={() => router.back()}
          >
            <ArrowLeft size={18} color="#FFFFFF" strokeWidth={1.5} />
          </TouchableOpacity>
          
          <View className="flex-row items-center ml-auto">
            <Text className="text-white/60 text-xs font-medium uppercase tracking-widest mr-4">–®–ê–ì 6 –ò–ó 6</Text>
            <TouchableOpacity onPress={handleSkip} className="p-2 rounded-full">
              <Text className="text-white/60 text-xs font-semibold uppercase tracking-widest">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å</Text>
            </TouchableOpacity>
          </View>

          <TouchableOpacity 
            className="p-2 rounded-full ml-4"
            onPress={resetOnboarding}
          >
            <Text className="text-white/60 text-xs font-semibold uppercase tracking-widest">–°–ë–†–û–°</Text>
          </TouchableOpacity>
        </View>

        <View className="w-full mb-5"> {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
          <View className="h-1 bg-white/10 rounded-sm mb-1.5">
            <View className="h-full bg-primary-500 rounded-sm" style={{ width: '100%' }} />
          </View>
        </View>

        {/* Main content */}
        <ScrollView className="flex-1" showsVerticalScrollIndicator={false}>
          <View className="items-center">
            <View className="mb-4 p-2.5 bg-primary-500/10 rounded-xl border border-primary-500/20">
              <CheckCircle size={28} color="#f97316" strokeWidth={1.5} />
            </View>

            <Text className="text-white text-lg font-bold text-center mb-6 leading-tight tracking-wide">–ù–ê–°–¢–†–û–ô–ö–ê NOOWING{'\n'}–ó–ê–í–ï–†–®–ï–ù–ê</Text>

            {/* Profile Section */}
            <View className="w-full bg-secondary-900 rounded-3xl p-5 mb-5 border border-secondary-700 shadow-strong">
              <View className="flex-row items-center justify-between mb-4">
                <View className="flex-row items-center">
                  <User size={14} color="#f97316" strokeWidth={1.5} className="mr-2" />
                  <Text className="text-white text-sm font-semibold tracking-wider">–¢–í–û–ô –ü–†–û–§–ò–õ–¨</Text>
                </View>
                <TouchableOpacity className="flex-row items-center p-1 rounded-full" onPress={handleEditProfile}>
                  <Edit3 size={10} color="#f97316" strokeWidth={1.5} className="mr-1" />
                  <Text className="text-primary-500 text-xs font-semibold uppercase tracking-wider">–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨</Text>
                </TouchableOpacity>
              </View>
              
              <View className="flex-row justify-between items-center mb-3">
                <Text className="text-secondary-300 text-xs font-semibold uppercase tracking-wider">–í–û–ó–†–ê–°–¢–ù–û–ô –î–ò–ê–ü–ê–ó–û–ù:</Text>
                <Text className="text-white text-sm font-medium">{userData.ageRange} ({userData.ageRangeLabel})</Text>
              </View>
              <View className="flex-row justify-between items-center mb-3">
                <Text className="text-secondary-300 text-xs font-semibold uppercase tracking-wider">–£–†–û–í–ï–ù–¨ –ê–ö–¢–ò–í–ù–û–°–¢–ò:</Text>
                <Text className="text-white text-sm font-medium">{userData.activityLevel} ({userData.activityLevelLabel})</Text>
              </View>
              <View className="flex-row justify-between items-center mb-3">
                <Text className="text-secondary-300 text-xs font-semibold uppercase tracking-wider">–ß–ê–°–û–í–û–ô –ü–û–Ø–°:</Text>
                <Text className="text-white text-sm font-medium">{userData.timezone}</Text>
              </View>
              <View className="flex-row justify-between items-center">
                <Text className="text-secondary-300 text-xs font-semibold uppercase tracking-wider">–†–ê–ë–û–ß–ò–ï –ß–ê–°–´:</Text>
                <Text className="text-white text-sm font-medium">{userData.workStartTime} - {userData.workEndTime}</Text>
              </View>
            </View>

            {/* Actions Section */}
            <View className="w-full bg-secondary-900 rounded-3xl p-5 mb-6 border border-secondary-700 shadow-strong">
              <Text className="text-primary-500 text-sm font-semibold text-center mb-4 leading-tight tracking-wide">üí° –ß–¢–û –î–ê–õ–¨–®–ï?</Text>
              <Text className="text-white/70 text-xs leading-snug tracking-tight mb-4">
                ‚Ä¢ –í–°–ï –ù–ê–°–¢–†–û–ô–ö–ò –ú–û–ñ–ù–û –ò–ó–ú–ï–ù–ò–¢–¨ –í –ü–†–û–§–ò–õ–ï{'\n'}
                ‚Ä¢ –¢–ê–ô–ú–ï–† –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –ü–û–î–°–¢–†–û–ò–¢–°–Ø –ü–û–î –í–ê–®–ï –†–ê–°–ü–ò–°–ê–ù–ò–ï{'\n'}
                ‚Ä¢ –£–ü–†–ê–ñ–ù–ï–ù–ò–Ø –ê–î–ê–ü–¢–ò–†–û–í–ê–ù–´ –ü–û–î –í–ê–® –£–†–û–í–ï–ù–¨ –ê–ö–¢–ò–í–ù–û–°–¢–ò{'\n'}
                ‚Ä¢ –ù–ê–ß–ù–ò–¢–ï –° –û–î–ù–û–ì–û –¶–ò–ö–õ–ê –ò –ü–û–°–¢–ï–ü–ï–ù–ù–û –£–í–ï–õ–ò–ß–ò–í–ê–ô–¢–ï
              </Text>
              <Text className="text-white text-base font-semibold text-center leading-snug tracking-wide">
                –ì–û–¢–û–í–´ –ù–ê–ß–ê–¢–¨ –°–í–û–ï –ü–£–¢–ï–®–ï–°–¢–í–ò–ï{'\n'}–ö –õ–£–ß–®–ï–ô –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–ò? üöÄ
              </Text>
            </View>
          </View>
        </ScrollView>

        {/* Bottom section */}
        <View className="pb-4">
          <Button 
            title="–ù–ê–ß–ê–¢–¨ NOOWING"
            onPress={handleComplete}
            fullWidth
            size="lg"
            className="shadow-medium"
          />
        </View>
      </SafeAreaView>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å */}
      <Modal
        animationType="fade"
        transparent={true}
        visible={showSkipModal}
        onRequestClose={cancelSkip}
      >
        <Pressable className="flex-1 justify-center items-center bg-black/70 p-6" onPress={cancelSkip}>
          <Card variant="default" className="w-full max-w-sm p-6 bg-secondary-900 border border-secondary-700 rounded-3xl shadow-strong">
            <TouchableOpacity onPress={cancelSkip} className="absolute top-4 right-4 p-2">
              <XCircle size={24} color="#cbd5e1" />
            </TouchableOpacity>
            <Text className="text-white text-2xl font-bold mb-4 text-center">–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥?</Text>
            <Text className="text-secondary-300 text-base text-center mb-6">
              –ü—Ä–æ–ø—É—Å–∫ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏—é –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –ø–æ—Ç–µ—Ä–µ —Ü–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏.
            </Text>
            <Button
              title="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥"
              onPress={cancelSkip}
              fullWidth
              className="mb-3"
            />
            <Button
              title="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ä–∞–≤–Ω–æ"
              onPress={confirmSkip}
              variant="ghost"
              fullWidth
            />
          </Card>
        </Pressable>
      </Modal>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */}
      <Modal
        animationType="fade"
        transparent={true}
        visible={showEditProfileModal}
        onRequestClose={() => setShowEditProfileModal(false)}
      >
        <Pressable className="flex-1 justify-center items-center bg-black/70 p-6" onPress={() => setShowEditProfileModal(false)}>
          <Card variant="default" className="w-full max-w-sm p-6 bg-secondary-900 border border-secondary-700 rounded-3xl shadow-strong">
            <TouchableOpacity onPress={() => setShowEditProfileModal(false)} className="absolute top-4 right-4 p-2">
              <XCircle size={24} color="#cbd5e1" />
            </TouchableOpacity>
            <Text className="text-white text-2xl font-bold mb-4 text-center">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ü—Ä–æ—Ñ–∏–ª—å</Text>
            
            <View className="mb-4">
              <Text className="text-secondary-300 text-base font-semibold mb-2">–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –î–∏–∞–ø–∞–∑–æ–Ω</Text>
              <TextInput
                className="w-full p-4 rounded-xl bg-secondary-800 text-white border border-secondary-700 focus:border-primary-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 18-25"
                placeholderTextColor="#64748b"
                value={userData.ageRange}
                onChangeText={(text) => updateUserData('ageRange', text, null)}
              />
            </View>

            <View className="mb-4">
              <Text className="text-secondary-300 text-base font-semibold mb-2">–£—Ä–æ–≤–µ–Ω—å –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</Text>
              <TextInput
                className="w-full p-4 rounded-xl bg-secondary-800 text-white border border-secondary-700 focus:border-primary-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, –ù–∏–∑–∫–∏–π"
                placeholderTextColor="#64748b"
                value={userData.activityLevel}
                onChangeText={(text) => updateUserData('activityLevel', text, null)}
              />
            </View>

            <View className="mb-4">
              <Text className="text-secondary-300 text-base font-semibold mb-2">–ß–∞—Å–æ–≤–æ–π –ü–æ—è—Å</Text>
              <TextInput
                className="w-full p-4 rounded-xl bg-secondary-800 text-white border border-secondary-700 focus:border-primary-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow"
                placeholderTextColor="#64748b"
                value={userData.timezone}
                onChangeText={(text) => updateUserData('timezone', text, null)}
              />
            </View>

            <View className="mb-4">
              <Text className="text-secondary-300 text-base font-semibold mb-2">–ù–∞—á–∞–ª–æ –†–∞–±–æ—á–∏—Ö –ß–∞—Å–æ–≤</Text>
              <TextInput
                className="w-full p-4 rounded-xl bg-secondary-800 text-white border border-secondary-700 focus:border-primary-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 09:00"
                placeholderTextColor="#64748b"
                value={userData.workStartTime}
                onChangeText={(text) => updateWorkHours(text, userData.workEndTime)}
              />
            </View>

            <View className="mb-6">
              <Text className="text-secondary-300 text-base font-semibold mb-2">–ö–æ–Ω–µ—Ü –†–∞–±–æ—á–∏—Ö –ß–∞—Å–æ–≤</Text>
              <TextInput
                className="w-full p-4 rounded-xl bg-secondary-800 text-white border border-secondary-700 focus:border-primary-500"
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 17:00"
                placeholderTextColor="#64748b"
                value={userData.workEndTime}
                onChangeText={(text) => updateWorkHours(userData.workStartTime, text)}
              />
            </View>
            
            <Button title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" onPress={() => setShowEditProfileModal(false)} fullWidth />
          </Card>
        </Pressable>
      </Modal>
    </View>
  );
}