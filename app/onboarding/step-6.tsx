import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';
import { router } from 'expo-router';
import { LinearGradient } from 'expo-linear-gradient';
import { ArrowRight, ArrowLeft, CircleCheck as CheckCircle, CreditCard as Edit3, Clock, Globe, Activity, User } from 'lucide-react-native';
import { SafeAreaView } from 'react-native-safe-area-context';

// –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–∑ AsyncStorage –∏–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞)
const getUserData = () => {
  // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —à–∞–≥–æ–≤
  // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
  if (typeof window !== 'undefined') {
    return {
      ageRange: localStorage.getItem('userAgeRange') || '26-35',
      ageRangeLabel: localStorage.getItem('userAgeRangeLabel') || '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–æ–∏–Ω—ã',
      activityLevel: localStorage.getItem('userActivityLevel') || 'intermediate',
      activityLevelLabel: localStorage.getItem('userActivityLevelLabel') || '–°—Ä–µ–¥–Ω–∏–π (11-20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π)',
      workStartTime: localStorage.getItem('userWorkStartTime') || '09:00',
      workEndTime: localStorage.getItem('userWorkEndTime') || '17:00',
      timezone: localStorage.getItem('userTimezone') || 'Europe/Moscow (UTC+3)',
    };
  }
  
  // Fallback –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
  return {
    ageRange: '26-35',
    ageRangeLabel: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–æ–∏–Ω—ã',
    activityLevel: 'intermediate',
    activityLevelLabel: '–°—Ä–µ–¥–Ω–∏–π (11-20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π)',
    workStartTime: '09:00',
    workEndTime: '17:00',
    timezone: 'Europe/Moscow (UTC+3)',
  };
};

export default function OnboardingStep6() {
  const [userData, setUserData] = useState(getUserData());

  const handleEditProfile = () => {
    Alert.alert(
      '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å',
      '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:',
      [
        { 
          text: '–í–æ–∑—Ä–∞—Å—Ç', 
          onPress: () => {
            Alert.alert(
              '–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç',
              '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω:',
              [
                { text: '18-25', onPress: () => updateUserData('ageRange', '18-25', '–¶–∏—Ñ—Ä–æ–≤—ã–µ –∞–±–æ—Ä–∏–≥–µ–Ω—ã') },
                { text: '26-35', onPress: () => updateUserData('ageRange', '26-35', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –≤–æ–∏–Ω—ã') },
                { text: '36-45', onPress: () => updateUserData('ageRange', '36-45', '–¶–∏—Ñ—Ä–æ–≤—ã–µ –ª–∏–¥–µ—Ä—ã') },
                { text: '46+', onPress: () => updateUserData('ageRange', '46+', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∏–æ–Ω–µ—Ä—ã') },
                { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
              ]
            );
          }
        },
        { 
          text: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', 
          onPress: () => {
            Alert.alert(
              '–ò–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
              '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å:',
              [
                { text: '–ù–∞—á–∏–Ω–∞—é—â–∏–π', onPress: () => updateUserData('activityLevel', 'beginner', '–ù–∞—á–∏–Ω–∞—é—â–∏–π (0-10 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π)') },
                { text: '–°—Ä–µ–¥–Ω–∏–π', onPress: () => updateUserData('activityLevel', 'intermediate', '–°—Ä–µ–¥–Ω–∏–π (11-20 –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π)') },
                { text: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', onPress: () => updateUserData('activityLevel', 'advanced', '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (21+ –ø—Ä–∏—Å–µ–¥–∞–Ω–∏–π)') },
                { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
              ]
            );
          }
        },
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
      ]
    );
  };

  const handleEditSchedule = () => {
    Alert.alert(
      '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
      '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:',
      [
        { 
          text: '–†–∞–±–æ—á–∏–µ —á–∞—Å—ã', 
          onPress: () => {
            Alert.alert(
              '–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã',
              '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è:',
              [
                { text: '08:00 - 16:00', onPress: () => updateWorkHours('08:00', '16:00') },
                { text: '09:00 - 17:00', onPress: () => updateWorkHours('09:00', '17:00') },
                { text: '10:00 - 18:00', onPress: () => updateWorkHours('10:00', '18:00') },
                { text: '11:00 - 19:00', onPress: () => updateWorkHours('11:00', '19:00') },
                { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
              ]
            );
          }
        },
        { 
          text: '–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', 
          onPress: () => {
            Alert.alert(
              '–ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
              '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:',
              [
                { text: 'UTC+3 (–ú–æ—Å–∫–≤–∞)', onPress: () => updateUserData('timezone', 'Europe/Moscow (UTC+3)', null) },
                { text: 'UTC+2 (–ö–∏–µ–≤)', onPress: () => updateUserData('timezone', 'Europe/Kiev (UTC+2)', null) },
                { text: 'UTC+1 (–ë–µ—Ä–ª–∏–Ω)', onPress: () => updateUserData('timezone', 'Europe/Berlin (UTC+1)', null) },
                { text: 'UTC+0 (–õ–æ–Ω–¥–æ–Ω)', onPress: () => updateUserData('timezone', 'Europe/London (UTC+0)', null) },
                { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
              ]
            );
          }
        },
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' }
      ]
    );
  };

  const updateUserData = (field: string, value: string, label: string | null) => {
    const newData = { ...userData };
    
    if (field === 'ageRange') {
      newData.ageRange = value;
      newData.ageRangeLabel = label || '';
    } else if (field === 'activityLevel') {
      newData.activityLevel = value;
      newData.activityLevelLabel = label || '';
    } else if (field === 'timezone') {
      newData.timezone = value;
    }
    
    setUserData(newData);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –≤–µ–±-–≤–µ—Ä—Å–∏–∏
    if (typeof window !== 'undefined') {
      if (field === 'ageRange') {
        localStorage.setItem('userAgeRange', value);
        localStorage.setItem('userAgeRangeLabel', label || '');
      } else if (field === 'activityLevel') {
        localStorage.setItem('userActivityLevel', value);
        localStorage.setItem('userActivityLevelLabel', label || '');
      } else if (field === 'timezone') {
        localStorage.setItem('userTimezone', value);
      }
    }
    
    Alert.alert('–£—Å–ø–µ—à–Ω–æ!', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
  };

  const updateWorkHours = (startTime: string, endTime: string) => {
    const newData = { 
      ...userData, 
      workStartTime: startTime, 
      workEndTime: endTime 
    };
    setUserData(newData);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    if (typeof window !== 'undefined') {
      localStorage.setItem('userWorkStartTime', startTime);
      localStorage.setItem('userWorkEndTime', endTime);
    }
    
    Alert.alert('–£—Å–ø–µ—à–Ω–æ!', `–†–∞–±–æ—á–∏–µ —á–∞—Å—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞ ${startTime} - ${endTime}`);
  };

  const handleComplete = () => {
    Alert.alert(
      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Noowing! üéâ',
      '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –ù–∞—á–Ω–µ–º –ø–æ–≤—ã—à–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å!',
      [
        { 
          text: '–ù–∞—á–∞—Ç—å Noowing', 
          onPress: () => {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
            if (typeof window !== 'undefined') {
              localStorage.setItem('onboardingCompleted', 'true');
            }
            router.push('/(tabs)');
          }
        }
      ]
    );
  };

  const resetOnboarding = () => {
    Alert.alert(
      '–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
      '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ?',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        { 
          text: '–°–±—Ä–æ—Å–∏—Ç—å', 
          style: 'destructive',
          onPress: () => {
            // –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            if (typeof window !== 'undefined') {
              localStorage.clear();
            }
            router.push('/onboarding');
          }
        }
      ]
    );
  };

  return (
    <LinearGradient
      colors={['#0F0F23', '#1A1A3A', '#2D2D5F']}
      style={styles.container}
    >
      <SafeAreaView style={styles.safeArea}>
        <View style={styles.content}>
          {/* Header */}
          <View style={styles.header}>
            <TouchableOpacity 
              style={styles.backButton}
              onPress={() => router.back()}
            >
              <ArrowLeft size={24} color="#FFFFFF" strokeWidth={2} />
            </TouchableOpacity>
            
            <View style={styles.progressContainer}>
              <View style={styles.progressBar}>
                <View style={[styles.progressFill, { width: '100%' }]} />
              </View>
              <Text style={styles.progressText}>–®–∞–≥ 6 –∏–∑ 6</Text>
            </View>

            <TouchableOpacity 
              style={styles.resetButton}
              onPress={resetOnboarding}
            >
              <Text style={styles.resetButtonText}>–°–±—Ä–æ—Å</Text>
            </TouchableOpacity>
          </View>

          {/* Main content */}
          <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
            <View style={styles.mainContent}>
              <View style={styles.iconContainer}>
                <CheckCircle size={48} color="#4ADE80" strokeWidth={1.5} />
              </View>

              <Text style={styles.title}>–í–æ—Ç —Ç–≤–æ—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Noowing:</Text>

              {/* Profile Section */}
              <View style={styles.sectionContainer}>
                <View style={styles.sectionHeader}>
                  <View style={styles.sectionTitleContainer}>
                    <User size={20} color="#00D4FF" strokeWidth={2} />
                    <Text style={styles.sectionTitle}>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</Text>
                  </View>
                  <TouchableOpacity style={styles.editButton} onPress={handleEditProfile}>
                    <Edit3 size={16} color="#00D4FF" strokeWidth={2} />
                    <Text style={styles.editButtonText}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Text>
                  </TouchableOpacity>
                </View>
                
                <View style={styles.profileItem}>
                  <Text style={styles.profileLabel}>–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω:</Text>
                  <Text style={styles.profileValue}>{userData.ageRange} ({userData.ageRangeLabel})</Text>
                </View>
                
                <View style={styles.profileItem}>
                  <Text style={styles.profileLabel}>–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</Text>
                  <Text style={styles.profileValue}>{userData.activityLevelLabel}</Text>
                </View>
              </View>

              {/* Schedule Section */}
              <View style={styles.sectionContainer}>
                <View style={styles.sectionHeader}>
                  <View style={styles.sectionTitleContainer}>
                    <Clock size={20} color="#00D4FF" strokeWidth={2} />
                    <Text style={styles.sectionTitle}>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ</Text>
                  </View>
                  <TouchableOpacity style={styles.editButton} onPress={handleEditSchedule}>
                    <Edit3 size={16} color="#00D4FF" strokeWidth={2} />
                    <Text style={styles.editButtonText}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Text>
                  </TouchableOpacity>
                </View>
                
                <View style={styles.profileItem}>
                  <Text style={styles.profileLabel}>–†–∞–±–æ—á–∏–µ —á–∞—Å—ã:</Text>
                  <Text style={styles.profileValue}>{userData.workStartTime} - {userData.workEndTime}</Text>
                </View>
                
                <View style={styles.profileItem}>
                  <Text style={styles.profileLabel}>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</Text>
                  <Text style={styles.profileValue}>{userData.timezone}</Text>
                </View>
              </View>

              {/* Cycle Explanation */}
              <View style={styles.cycleContainer}>
                <Text style={styles.cycleTitle}>–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ü–∏–∫–ª 45-2-5:</Text>
                <View style={styles.cycleItem}>
                  <View style={[styles.cycleDot, { backgroundColor: '#4ADE80' }]} />
                  <Text style={styles.cycleText}>45 –º–∏–Ω—É—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã</Text>
                </View>
                <View style={styles.cycleItem}>
                  <View style={[styles.cycleDot, { backgroundColor: '#FBBF24' }]} />
                  <Text style={styles.cycleText}>2 –º–∏–Ω—É—Ç—ã —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ({userData.activityLevel})</Text>
                </View>
                <View style={styles.cycleItem}>
                  <View style={[styles.cycleDot, { backgroundColor: '#8B5CF6' }]} />
                  <Text style={styles.cycleText}>5 –º–∏–Ω—É—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è</Text>
                </View>
              </View>

              <View style={styles.infoContainer}>
                <Text style={styles.infoTitle}>üí° –ß—Ç–æ –¥–∞–ª—å—à–µ?</Text>
                <Text style={styles.infoText}>
                  ‚Ä¢ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ{'\n'}
                  ‚Ä¢ –¢–∞–π–º–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ–¥ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ{'\n'}
                  ‚Ä¢ –£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ–¥ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏{'\n'}
                  ‚Ä¢ –ù–∞—á–Ω–∏—Ç–µ —Å –æ–¥–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ
                </Text>
              </View>

              <Text style={styles.editPrompt}>
                –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –ª—É—á—à–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏? üöÄ
              </Text>
            </View>
          </ScrollView>

          {/* Bottom section */}
          <View style={styles.bottomSection}>
            <TouchableOpacity 
              style={styles.continueButton}
              onPress={handleComplete}
            >
              <LinearGradient
                colors={['#4ADE80', '#22C55E']}
                style={styles.buttonGradient}
              >
                <Text style={styles.buttonText}>–ù–∞—á–∞—Ç—å Noowing</Text>
                <ArrowRight size={20} color="#000" strokeWidth={2} />
              </LinearGradient>
            </TouchableOpacity>
          </View>
        </View>
      </SafeAreaView>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  safeArea: {
    flex: 1,
  },
  content: {
    flex: 1,
    paddingHorizontal: 24,
    paddingTop: 20,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 40,
  },
  backButton: {
    padding: 8,
    marginRight: 16,
  },
  progressContainer: {
    flex: 1,
  },
  progressBar: {
    height: 4,
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    borderRadius: 2,
    marginBottom: 8,
  },
  progressFill: {
    height: '100%',
    backgroundColor: '#4ADE80',
    borderRadius: 2,
  },
  progressText: {
    fontSize: 14,
    color: 'rgba(255, 255, 255, 0.7)',
    fontFamily: 'Inter-Medium',
  },
  resetButton: {
    paddingVertical: 6,
    paddingHorizontal: 12,
    backgroundColor: 'rgba(239, 68, 68, 0.1)',
    borderRadius: 8,
    borderWidth: 1,
    borderColor: 'rgba(239, 68, 68, 0.3)',
    marginLeft: 16,
  },
  resetButtonText: {
    fontSize: 12,
    fontFamily: 'Inter-Medium',
    color: '#EF4444',
  },
  scrollView: {
    flex: 1,
  },
  mainContent: {
    alignItems: 'center',
    paddingBottom: 20,
  },
  iconContainer: {
    marginBottom: 24,
    padding: 16,
    backgroundColor: 'rgba(74, 222, 128, 0.1)',
    borderRadius: 20,
    borderWidth: 1,
    borderColor: 'rgba(74, 222, 128, 0.2)',
  },
  title: {
    fontSize: 24,
    fontFamily: 'Inter-Bold',
    color: '#FFFFFF',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 32,
  },
  sectionContainer: {
    width: '100%',
    backgroundColor: 'rgba(255, 255, 255, 0.05)',
    borderRadius: 16,
    padding: 20,
    marginBottom: 16,
    borderWidth: 1,
    borderColor: 'rgba(255, 255, 255, 0.1)',
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  sectionTitleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  sectionTitle: {
    fontSize: 18,
    fontFamily: 'Inter-SemiBold',
    color: '#FFFFFF',
    marginLeft: 8,
  },
  editButton: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 6,
    paddingHorizontal: 12,
    backgroundColor: 'rgba(0, 212, 255, 0.1)',
    borderRadius: 8,
    borderWidth: 1,
    borderColor: 'rgba(0, 212, 255, 0.3)',
  },
  editButtonText: {
    fontSize: 12,
    fontFamily: 'Inter-Medium',
    color: '#00D4FF',
    marginLeft: 4,
  },
  profileItem: {
    marginBottom: 12,
  },
  profileLabel: {
    fontSize: 14,
    fontFamily: 'Inter-Regular',
    color: 'rgba(255, 255, 255, 0.7)',
    marginBottom: 4,
  },
  profileValue: {
    fontSize: 16,
    fontFamily: 'Inter-SemiBold',
    color: '#FFFFFF',
  },
  cycleContainer: {
    width: '100%',
    backgroundColor: 'rgba(0, 212, 255, 0.05)',
    borderRadius: 16,
    padding: 20,
    marginBottom: 24,
    borderWidth: 1,
    borderColor: 'rgba(0, 212, 255, 0.2)',
  },
  cycleTitle: {
    fontSize: 18,
    fontFamily: 'Inter-SemiBold',
    color: '#00D4FF',
    marginBottom: 16,
    textAlign: 'center',
  },
  cycleItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  cycleDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    marginRight: 12,
  },
  cycleText: {
    fontSize: 15,
    fontFamily: 'Inter-Regular',
    color: 'rgba(255, 255, 255, 0.9)',
    lineHeight: 22,
    flex: 1,
  },
  infoContainer: {
    width: '100%',
    backgroundColor: 'rgba(74, 222, 128, 0.05)',
    borderRadius: 16,
    padding: 20,
    marginBottom: 24,
    borderWidth: 1,
    borderColor: 'rgba(74, 222, 128, 0.2)',
  },
  infoTitle: {
    fontSize: 16,
    fontFamily: 'Inter-SemiBold',
    color: '#4ADE80',
    marginBottom: 12,
    textAlign: 'center',
  },
  infoText: {
    fontSize: 14,
    fontFamily: 'Inter-Regular',
    color: 'rgba(255, 255, 255, 0.8)',
    lineHeight: 20,
  },
  editPrompt: {
    fontSize: 16,
    fontFamily: 'Inter-Medium',
    color: '#FFFFFF',
    textAlign: 'center',
    lineHeight: 24,
  },
  bottomSection: {
    paddingBottom: 20,
  },
  continueButton: {
    borderRadius: 16,
    overflow: 'hidden',
  },
  buttonGradient: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    paddingVertical: 18,
    paddingHorizontal: 32,
  },
  buttonText: {
    fontSize: 16,
    fontFamily: 'Inter-SemiBold',
    color: '#000',
    marginRight: 8,
  },
});