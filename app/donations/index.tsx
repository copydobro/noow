import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { router } from 'expo-router';
import { Heart, Coffee, Zap, Crown, X, CircleCheck as CheckCircle } from 'lucide-react-native';
import { Button } from '@/components/ui';
import { Colors, Typography } from '@/constants';

interface DonationTier {
  id: string;
  amount: number;
  title: string;
  description: string;
  icon: any;
  color: string;
  benefits: string[];
  impact: string;
}

const donationTiers: DonationTier[] = [
  {
    id: 'coffee',
    amount: 10,
    title: '–ö–û–§–ï –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–£',
    description: '–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ –Ω–∞—Å —á–∞—à–∫–æ–π –∫–æ—Ñ–µ',
    icon: Coffee,
    color: '#8B4513',
    benefits: [
      '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –±–µ–π–¥–∂ "–ü–æ–¥–¥–µ—Ä–∂–∫–∞"',
      '–î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞-—Ñ—É–Ω–∫—Ü–∏—è–º'
    ],
    impact: '–ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–∫—Ä—ã—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ –Ω–∞ 1 –¥–µ–Ω—å'
  },
  {
    id: 'supporter',
    amount: 100,
    title: '–ê–ö–¢–ò–í–ù–´–ô –°–¢–û–†–û–ù–ù–ò–ö',
    description: '–°–µ—Ä—å–µ–∑–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–≤–∏—Ç–∏—è',
    icon: Zap,
    color: '#FF6B35',
    benefits: [
      '–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
      '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      '–í–ª–∏—è–Ω–∏–µ –Ω–∞ roadmap –ø—Ä–æ–µ–∫—Ç–∞'
    ],
    impact: '–ü–æ–∫—Ä—ã–≤–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏'
  },
  {
    id: 'patron',
    amount: 1000,
    title: '–ú–ï–¶–ï–ù–ê–¢ –ü–†–û–ï–ö–¢–ê',
    description: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –º–∏—Å—Å–∏–∏',
    icon: Crown,
    color: '#FFD700',
    benefits: [
      '–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Ä–æ–≤–Ω–µ–π',
      '–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏"',
      '–ü—Ä—è–º–∞—è —Å–≤—è–∑—å —Å –∫–æ–º–∞–Ω–¥–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ —Ä–∞–∑–≤–∏—Ç–∏–∏',
      '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é'
    ],
    impact: '–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä–µ–¥'
  }
];

export default function DonationsScreen() {
  const [selectedTier, setSelectedTier] = useState<string>('');
  const [isProcessing, setIsProcessing] = useState(false);

  const handleDonate = async (tier: DonationTier) => {
    setIsProcessing(true);
    
    // Simulate payment processing
    setTimeout(() => {
      setIsProcessing(false);
      Alert.alert(
        '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üôè',
        `–í–∞—à –¥–æ–Ω–∞—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ $${tier.amount} –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω –¥–ª—è –Ω–∞—Å. –í—ã –ø–æ–ª—É—á–∏—Ç–µ –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –Ω–∞ email.`,
        [
          { text: '–û—Ç–ª–∏—á–Ω–æ!', onPress: () => router.back() }
        ]
      );
    }, 2000);
  };

  const showImpactDetails = () => {
    Alert.alert(
      '–í–ª–∏—è–Ω–∏–µ –≤–∞—à–∏—Ö –¥–æ–Ω–∞—Ç–æ–≤',
      '–ö–∞–∂–¥—ã–π –¥–æ–Ω–∞—Ç –Ω–∞–ø—Ä—è–º—É—é –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ NOOW:\n\n‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π\n‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤\n‚Ä¢ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞'
    );
  };

  return (
    <View style={styles.container}>
      <SafeAreaView style={styles.safeArea}>
        <View style={styles.content}>
          {/* Header */}
          <View style={styles.header}>
            <TouchableOpacity style={styles.backButton} onPress={() => router.back()}>
              <X size={20} color={Colors.text.primary} strokeWidth={1.5} />
            </TouchableOpacity>
            
            <View style={styles.headerCenter}>
              <Text style={styles.title}>–ü–û–î–î–ï–†–ñ–ö–ê –ü–†–û–ï–ö–¢–ê</Text>
              <Text style={styles.subtitle}>–ü–û–ú–û–ì–ò–¢–ï –†–ê–ó–í–ò–í–ê–¢–¨ NOOW</Text>
            </View>
          </View>

          <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>
            {/* Mission Statement */}
            <View style={styles.mission}>
              <View style={styles.missionIcon}>
                <Heart size={32} color={Colors.accentColors.primary} strokeWidth={1.5} />
              </View>
              <Text style={styles.missionTitle}>–ù–ê–®–ê –ú–ò–°–°–ò–Ø</Text>
              <Text style={styles.missionText}>
                NOOW —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ª—é–¥—è–º –¥–æ—Å—Ç–∏—á—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 
                —á–µ—Ä–µ–∑ –Ω–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –í–∞—à–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–º —Ä–∞–∑–≤–∏–≤–∞—Ç—å 
                –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏.
              </Text>
            </View>

            {/* Donation Tiers */}
            <View style={styles.tiersContainer}>
              <Text style={styles.tiersTitle}>–í–´–ë–ï–†–ò–¢–ï –£–†–û–í–ï–ù–¨ –ü–û–î–î–ï–†–ñ–ö–ò</Text>
              
              {donationTiers.map((tier) => (
                <TouchableOpacity
                  key={tier.id}
                  style={[
                    styles.tierCard,
                    selectedTier === tier.id && styles.tierCardSelected
                  ]}
                  onPress={() => setSelectedTier(tier.id)}
                >
                  <View style={styles.tierHeader}>
                    <View style={[styles.tierIcon, { backgroundColor: `${tier.color}20` }]}>
                      <tier.icon size={24} color={tier.color} strokeWidth={1.5} />
                    </View>
                    <View style={styles.tierInfo}>
                      <Text style={styles.tierAmount}>${tier.amount}</Text>
                      <Text style={styles.tierTitle}>{tier.title}</Text>
                    </View>
                    {selectedTier === tier.id && (
                      <CheckCircle size={20} color={Colors.accentColors.primary} strokeWidth={1.5} />
                    )}
                  </View>
                  
                  <Text style={styles.tierDescription}>{tier.description}</Text>
                  
                  <View style={styles.benefits}>
                    <Text style={styles.benefitsTitle}>–ß–¢–û –í–´ –ü–û–õ–£–ß–ò–¢–ï:</Text>
                    {tier.benefits.map((benefit, index) => (
                      <Text key={index} style={styles.benefitItem}>‚Ä¢ {benefit}</Text>
                    ))}
                  </View>
                  
                  <View style={styles.impact}>
                    <Text style={styles.impactTitle}>–í–õ–ò–Ø–ù–ò–ï:</Text>
                    <Text style={styles.impactText}>{tier.impact}</Text>
                  </View>
                  
                  {selectedTier === tier.id && (
                    <Button
                      title={isProcessing ? "–û–ë–†–ê–ë–û–¢–ö–ê..." : `–ü–û–î–î–ï–†–ñ–ê–¢–¨ $${tier.amount}`}
                      onPress={() => handleDonate(tier)}
                      disabled={isProcessing}
                      style={styles.donateButton}
                    />
                  )}
                </TouchableOpacity>
              ))}
            </View>

            {/* Impact Section */}
            <View style={styles.impactSection}>
              <Text style={styles.impactSectionTitle}>–ü–†–û–ó–†–ê–ß–ù–û–°–¢–¨ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø</Text>
              <TouchableOpacity style={styles.impactCard} onPress={showImpactDetails}>
                <View style={styles.impactStats}>
                  <View style={styles.impactStat}>
                    <Text style={styles.impactStatValue}>75%</Text>
                    <Text style={styles.impactStatLabel}>–†–ê–ó–†–ê–ë–û–¢–ö–ê</Text>
                  </View>
                  <View style={styles.impactStat}>
                    <Text style={styles.impactStatValue}>15%</Text>
                    <Text style={styles.impactStatLabel}>–ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–ê</Text>
                  </View>
                  <View style={styles.impactStat}>
                    <Text style={styles.impactStatValue}>10%</Text>
                    <Text style={styles.impactStatLabel}>–ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø</Text>
                  </View>
                </View>
                <Text style={styles.impactCardText}>
                  –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ä–µ–¥—Å—Ç–≤–∞
                </Text>
              </TouchableOpacity>
            </View>
          </ScrollView>
        </View>
      </SafeAreaView>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: Colors.background.primary,
  },
  safeArea: {
    flex: 1,
  },
  content: {
    flex: 1,
    paddingHorizontal: 20,
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 20,
    marginBottom: 20,
  },
  backButton: {
    padding: 8,
  },
  headerCenter: {
    flex: 1,
    alignItems: 'center',
    marginRight: 40,
  },
  title: {
    ...Typography.sizes.h2,
    color: Colors.text.primary,
    textAlign: 'center',
  },
  subtitle: {
    ...Typography.sizes.body,
    color: Colors.text.secondary,
    textAlign: 'center',
    marginTop: 4,
  },
  scrollView: {
    flex: 1,
  },
  mission: {
    alignItems: 'center',
    paddingVertical: 30,
    marginBottom: 30,
  },
  missionIcon: {
    width: 64,
    height: 64,
    borderRadius: 32,
    backgroundColor: `${Colors.accentColors.primary}20`,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 16,
  },
  missionTitle: {
    ...Typography.sizes.h3,
    color: Colors.text.primary,
    marginBottom: 12,
  },
  missionText: {
    ...Typography.sizes.body,
    color: Colors.text.secondary,
    textAlign: 'center',
    lineHeight: 24,
  },
  tiersContainer: {
    marginBottom: 30,
  },
  tiersTitle: {
    ...Typography.sizes.h3,
    color: Colors.text.primary,
    marginBottom: 20,
    textAlign: 'center',
  },
  tierCard: {
    backgroundColor: Colors.background.secondary,
    borderRadius: 16,
    padding: 20,
    marginBottom: 16,
    borderWidth: 1,
    borderColor: Colors.border.primary,
  },
  tierCardSelected: {
    borderColor: Colors.accentColors.primary,
    backgroundColor: `${Colors.accentColors.primary}08`,
  },
  tierHeader: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
  },
  tierIcon: {
    width: 48,
    height: 48,
    borderRadius: 24,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
  },
  tierInfo: {
    flex: 1,
  },
  tierAmount: {
    ...Typography.sizes.h2,
    color: Colors.text.primary,
  },
  tierTitle: {
    ...Typography.sizes.body,
    color: Colors.text.secondary,
    marginTop: 2,
  },
  tierDescription: {
    ...Typography.sizes.body,
    color: Colors.text.secondary,
    marginBottom: 16,
  },
  benefits: {
    marginBottom: 16,
  },
  benefitsTitle: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.primary,
    fontWeight: '600',
    marginBottom: 8,
  },
  benefitItem: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.secondary,
    marginBottom: 4,
  },
  impact: {
    marginBottom: 16,
  },
  impactTitle: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.primary,
    fontWeight: '600',
    marginBottom: 4,
  },
  impactText: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.secondary,
  },
  donateButton: {
    marginTop: 8,
  },
  impactSection: {
    marginBottom: 30,
  },
  impactSectionTitle: {
    ...Typography.sizes.h3,
    color: Colors.text.primary,
    marginBottom: 16,
    textAlign: 'center',
  },
  impactCard: {
    backgroundColor: Colors.background.secondary,
    borderRadius: 16,
    padding: 20,
    borderWidth: 1,
    borderColor: Colors.border.primary,
  },
  impactStats: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 16,
  },
  impactStat: {
    alignItems: 'center',
  },
  impactStatValue: {
    ...Typography.sizes.h2,
    color: Colors.accentColors.primary,
  },
  impactStatLabel: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.secondary,
    textAlign: 'center',
    marginTop: 4,
  },
  impactCardText: {
    ...Typography.sizes.bodySmall,
    color: Colors.text.secondary,
    textAlign: 'center',
  },
}); 